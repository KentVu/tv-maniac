default_platform(:ios)

# Set timeout for xcodebuild commands
TEST_DEVICE = "iPhone 16 Pro"

platform :ios do

  before_all do
    setup_ci
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "180"
  end

  desc "Run Snapshot Tests"
  lane :snapshot_tests do
    # Clear derived data first for clean state
    clear_derived_data_lane

    # Run SwiftUI Components snapshot tests
    run_tests(
      project: "ios/tv-maniac.xcodeproj",
      scheme: "SwiftUIComponents",
      device: TEST_DEVICE,
      clean: true,
      result_bundle: true,
      xcargs: "-retry-tests-on-failure -skipPackagePluginValidation",
      number_of_retries: 2,
      fail_build: true,
      derived_data_path: "derived_data"
    )

  end

  desc "Build iOS App"
  lane :build_tvmaniac do
    # Clear derived data first
    clear_derived_data_lane

    # Build the app
    build_ios_app(
      project: "ios/tv-maniac.xcodeproj",
      scheme: "tv-maniac",
      configuration: "Debug",
      destination: "platform=iOS Simulator,name=#{TEST_DEVICE}",
      derived_data_path: "derived_data",
      xcargs: "-skipPackagePluginValidation -resolvePackageDependencies",
      output_directory: "build",
      output_name: "tv-maniac-debug",
      buildlog_path: "fastlane/logs",
      clean: true,
      skip_package_ipa: true,
      skip_archive: true,
      skip_codesigning: true,
      export_method: "development",
      export_options: {
        method: "development",
        signingStyle: "automatic",
        compileBitcode: false,
        provisioningProfiles: {}
      }
    )
  end

  desc "Clear derived data"
  lane :clear_derived_data_lane do
    clear_derived_data(
      derived_data_path: "derived_data"
    )
  end

  desc "Run SwiftFormat"
  lane :format_swift_code do
    # Using SwiftFormat directly (installed via Homebrew or Swift Package Manager)
    # See: https://github.com/nicklockwood/SwiftFormat
    sh "cd .. && swiftformat ios --config ios/.swiftformat"
  end

  desc "Check SwiftFormat without making changes"
  lane :check_swift_format do
    # Using SwiftFormat directly (installed via Homebrew or Swift Package Manager)
    # See: https://github.com/nicklockwood/SwiftFormat
    sh "cd .. && swiftformat ios --config ios/.swiftformat --lint"
  end
end
